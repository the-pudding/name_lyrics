"0","findName <- function(artist, song, lyrics, name){"
"0","  search <- paste0(""\\b("", name, "")([:space:]|\\b)"")"
"0","  found <- stringr::str_detect(string = lyrics, pattern = regex(pattern = search))"
"0","  if (TRUE %in% found){"
"0","      songTibble <- tibble(""artist"" = artist,"
"0","                           ""song"" = song,"
"0","                           ""lyrics"" = list(lyrics),"
"0","                           ""name"" = name) %>% "
"0","        unnest(lyrics) %>% "
"0","        mutate(contains = stringr::str_detect(string = lyrics, pattern = regex(pattern = search))) %>% "
"0","        filter(contains == TRUE)"
"0","      "
"0","      parsedSong <- map_dfr(songTibble$lyrics, function(x){"
"0","          parse <-  udpipe::udpipe_annotate(x, object = ud_english)"
"0","          txt <- as.data.frame(parse)"
"0","        }) %>% "
"0","          filter(token == name) %>% "
"0","          mutate(artist = artist,"
"0","               song = song, "
"0","               name = name) %>% "
"0","        select(c(artist, song, name, sentence, upos, xpos, dep_rel))"
"0","      "
"0","    "
"0","  "
"0","    fileName = here::here(""processed_data"", ""topSongNamesNew.csv"")"
"0","      "
"0","	  write.table(parsedSong, file = fileName, row.names = FALSE, append = TRUE, sep = "","", col.names = !file.exists(fileName))"
"0","	  "
"0","	  return(parsedSong)"
"0","  }"
"0","}"
